import random


# УСЛОВНЫЕ ОПЕРАТОРЫ IF-ELSE 
# Задача 1 
# Даны 4 числа типа int. Сравнить их и вывести наименьшее на консоль. 

# lst = [2, 11, 7, 75]  
    
# min_value = lst[0]

# for i in range(0, len(lst)):    
#    if lst[i] < min_value:    
#        min_value = lst[i]
# print(min_value)


# Задача 2 
# Дано число месяца (тип int). Необходимо определить время года (зима, весна, лето, осень) и вывести на консоль. 

# num = int(input("Type the month:"))
# if num<13:
#     if 3 <= num <= 5:
#         print("Spring")
#     elif 6 <= num <= 8:
#         print("Summer")
#     elif 9 <= num <= 11:
#         print("Autumn")
#     elif not(12 < num >=2):
#         print("Winter")
# else:
#     print("not correct command!")

# Задача 3 
# Создать программу, проверяющую и сообщающую на экран, является ли целое число записанное в переменную n, чётным либо нечётным. 

# n = int(input('Введите число:'))
# if n % 2 == 0:
#     print('Число чётное')
# else:
#     print('Число не чётное')

# Задача 4 
# Создать программу, выводящую на экран ближайшее к 10 из двух чисел, записанных в переменные m и n. Например, среди чисел 8,5 и 11,45 ближайшее к десяти 11,45. 
# inp = float(input('Type your digit:'))
# m, n = 8, 13

# subtraction1 = m-inp if m>inp else inp - m
# subtraction2 = n-inp if n>inp else inp - n
# if subtraction1 > subtraction2:
#     print(n)
# elif subtraction2 > subtraction1:
#     print(m)
# else:
#     print('Они равны по близости')


# Задача 5 
# Создать программу, выводящую на экран случайно сгенерированное трёхзначное натуральное число и его наибольшую цифру. 


# random_numbers = random.choices(range(1,9), k=3)
# max_digit = 0
# number = ''
# for i in random_numbers:
#     number += str(i)
#     if i > max_digit:
#         max_digit = i
# print(f'Из {number} наибольшая цифра {max_digit}')

# Задача 6 
# Угадать число, которое загадал пользователь, используя только инструкцию if-else. 

# random_digit = random.randint(0, 99999)         # выбирает рандомное число в диапазоне 0, 99999
# # print(random_digit)        #чтобы не мучатся 3,4 дня
# while True:
#     inp = int(input('Guess the number:'))
#     if inp == random_digit:
#         print('Wow you guessed it!')
#         break

# Задача 7 
# Определить количество дней в году, который вводит пользователь. 
# В високосном годе - 366 дней, тогда как в обычном 365. Високосными годами являются все года делящиеся нацело на 4 за исключением столетий, которые не делятся нацело на 400. 

# inp = int(input('Type:'))

# if inp % 4 == 0 and inp % 400 == 0 or inp % 100 != 0:
#     print('This year has 366 days')
# else:
#     print('This year has 365 days')

# Задача 8 
# Баскетбол 
# Известны результаты каждой из 4х четвертей баскетбольной встречи. Нужно определить победителя матча. Побеждает команда, набравшая больше очков в течение всего матча.
# Входные данные 
# Входной файл INPUT.TXT содержит 4 строки, в каждой строке находится два целых числа a и b – итоговый счет в соответствующей четверти. а – количество набранных очков за четверть первой командой, b – количество очков, набранных за четверть второй 
# командой. (0 ≤ a,b ≤ 100). 
# Выходные данные 
# В выходной файл OUTPUT.TXT выведите номер выигравшей команды, в случае ничьей следует вывести «DRAW». 



# Задача 9 
# Торт 
# На свой день рождения Петя купил красивый и вкусный торт, который имел идеально круглую форму. Петя не знал, сколько гостей придет на его день рождения, поэтому вынужден был разработать алгоритм, согласно которому он сможет быстро разрезать торт на N равных частей. Следует учесть, что разрезы торта можно производить как по радиусу, так и по диаметру. 
# Помогите Пете решить эту задачу, определив наименьшее число разрезов торта по заданному числу гостей. 
# Входные данные 
# Входной файл INPUT.TXT содержит натуральное число N – число гостей, включая самого виновника торжества (N ≤ 1000). Вместо работы с файлами можно работать с функциями, которые принимают аргументы.
# Выходные данные 
# В выходной файл OUTPUT.TXT выведите минимально возможное число разрезов торта. Вместо работы с файлами можно работать с функциями, которые принимают аргументы.

# Задача 10 
# Четырехзначный палиндром 

# Требуется написать программу, определяющую, является ли четырехзначное натуральное число N палиндромом, т.е. числом, которое одинаково читается слева направо и справа налево. 
# Входные данные 
# Входной файл INPUT.TXT содержит натуральное число N (1000 ≤ N ≤ 9999). Вместо работы с файлами можно работать с функциями, которые принимают аргументы.
# Выходные данные 
# В выходной файл OUTPUT.TXT следует вывести слово «YES», если число N является палиндромом, или «NO» – если нет. 

# Задача 11 
# Счастливый билет 
# Вы пользуетесь общественным транспортом? Вероятно, вы расплачивались за проезд и получали билет с номером. Счастливым билетом называют такой билет с шестизначным номером, где сумма первых трех цифр равна сумме последних трех. Т.е. билет с номером 385916 – счастливый, т.к. 3+8+5=9+1+6. Вам требуется написать программу, которая проверяет счастливость билета. 
# Входные данные 
# В единственной строке входного файла INPUT.TXT записано одно целое число N (0 ≤ N < 106). 
# Выходные данные 
# В выходной файл OUTPUT.TXT нужно вывести «YES», если билет с номером N счастливый и
# «NO» в противном случае. 


# number_of_ticket = int(input('Enter your ticket number:'))

# n1, n2 = str(number_of_ticket)[0:3], str(number_of_ticket)[3:6]
# if int(n1) == int(n2):
#     print('Билет счастливый')
# else:
#     print('Билет не счастливый')

# Задача 12 
# Цветочки 

# В рождественский вечер на окошке стояло три цветочка, слева направо: герань, крокус и фиалка. Каждое утро Маша вытирала окошко и меняла местами стоящий справа цветок с центральным цветком. А Таня каждый вечер поливала цветочки и меняла местами левый и центральный цветок. Требуется определить порядок цветов ночью по
# прошествии K дней. 
# Входные данные 
# Во входном файле INPUT.TXT содержится натуральное число K – число дней (K ≤ 1000). Вместо работы с файлами можно работать с функциями, которые принимают аргументы.
# Выходные данные 
# В выходной файл OUTPUT.TXT требуется вывести три английских буквы: «G», «C» и «V» (заглавные буквы без пробелов), описывающие порядок цветов на окошке по истечении K дней (слева направо). Обозначения: G – герань, C – крокус, V – фиалка.
# inp = open("INPUT.TXT","r")
# output = open("OUTPUT.TXT","r").read()
# n = [i for i in output]
# i = 0
# days = int(inp.read())
# while i != days:
#     v = n[2]    # сохраняем фиалку в переменную v так как в 157мой строке фиалка исчезает
#     n[2] = n[1]   # V – фиалку меняем на C – крокус
#     n[1] = v   # C – крокус меняем на V – фиалку
#     a = n[1] # сохраняем фиалку в переменную а так как в 160-строке фиалка исчезает
#     n[1] = n[0] # Фиалку - V меняем на герань - G
#     n[0] = a # герань - G меняем на Фиалку - V
#     i += 1
# print(n)
# update_output = open("INPUT.TXT", "w")
# update_output.write(f"{n}\n")
# update_output.close()